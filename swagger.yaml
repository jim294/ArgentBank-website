swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: 1.0.0
  termsOfService: 'http://swagger.io/terms/'
# host: localhost:3001
# basePath: /api/v1
# schemes:
#   - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/Accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Tranctions Module
      summary: Transactions API
      description: API for fetching all accounts for a user
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description:  view all accounts of a user
          schema:
            $ref: '#/definitions/UserAccounts'
        '400':
          description: Invalid Fields
        '401':
          description: Invalid Token
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /user/Accounts/{Accountid}:
    get:
      security:
        - Bearer: []
      tags:
        - Tranctions Module
      summary: Transactions API
      description: API for fetching one account of the user
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - type: string
          in: path
          name: Accountid
          description: User Account ID
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User Account retrieved successully
          schema:
            $ref: '#/definitions/UserAccount'
        '400':
          description: Invalid Fields
        '401':
          description: Invalid Token
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /user/Accounts/{Accountid}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Tranctions Module
      summary: Transactions API
      description: API for fetching all transactions for an account
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - type: string
          in: path
          name: Accountid
          description: User Account ID
          required: true
      produces:
        - application/json
      responses:
        '200':
          description:  Account transactions retrieved successully
          schema:
            $ref: '#/definitions/transactions'
        '400':
          description: Invalid Fields
        '401':
          description: Invalid Token
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /user/Accounts/{Accountid}/transaction/{Transactionid}:         
    get:
      security:
        - Bearer: []
      tags:
        - Tranctions Module
      summary: Transaction
      description: API for view a transaction
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - type: string
          in: path
          name: Accountid
          description: User Account ID
          required: true
        - type: string
          in: path
          name: Transactionid
          description: User Account transaction ID
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: transaction retrieved successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Invalid Token
        '404':
          description: Not Found
        '500':
          description: Internal Server Error        
    put:
      security:
        - Bearer: []
      tags:
        - Tranctions Module
      summary: Transaction
      description: API for updating a transaction
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - type: string
          in: path
          name: Accountid
          description: User Account ID
          required: true
        - type: string
          in: path
          name: Transactionid
          description: User Account transaction ID
          required: true
        - in: body
          name: body
          description: The transaction that need to be updated
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdateRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction update Successfully
          schema:
            $ref: '#/definitions/TransactionUpdateResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Invalid Token
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  UserAccounts:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: Success !
      accounts:
        type: array
        items:
          $ref: '#/definitions/Accounts'
  Accounts:
    type: object
    properties:
      AccountId:
        type: number
        description: Account ID
      date:
        type: string
      name:
        type: string
      balance:
        type: integer
        description: Account available balance
        example: 0
  UserAccount:
    type: object
    properties:
      Accountid:
        type: number
      date:
        type: string
      description:
        type: string
      balance:
        type: number
  transactions:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: Success !
      transactions:
        type: array
        items:
          $ref: '#/definitions/transactionsArray'
  transactionsArray:
    type: object
    properties:
      AccountId:
        type: number
        description: Account ID
      date:
        type: string
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
  TransactionResponse:      
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: Success !
      transaction:
        type: object
        properties:
          transactionid:
            type: number
          date:
            type: string
          description:
            type: string
          amount:
            type: number
          balance:
            type: number
          transaction type:
            type: string
          category:
            type: string
          notes:
            type: string       
  TransactionUpdateRequest:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string
  TransactionUpdateResponse:
    type: object
    properties:
      status:
        type: integer
        description: Response status code from the API
        example: 200
      message:
        type: string
        description: Response message from the API
        example: Transaction successfully updated!
      transaction:
        type: object
        properties:
          category:
            type: string
          notes:
            type: string
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /JEANMARIEDESCHAMPS25/argentBanck/1.0.0
schemes:
 - https
 - http
# Added by API Auto Mocking Plugin
basePath: /JEANMARIEDESCHAMPS25/1test/1.0.0